import { getSubString, multiplyDigitsInNumber, getMaxMultiplicationValueOfSubstring } from './problem'

const inputDigit = ``

it ('should check that digits is a string of valid lenght', () => {
    expect(inputDigit.length).toEqual(1000)
})

it ('should testh the substring function', () => {
    expect(getSubString(inputDigit, 0, 4)).toEqual('7316')
    expect(getSubString(inputDigit, 996, 4)).toEqual('3450')
    expect(getSubString(inputDigit, 0, 13)).toEqual('7316717653133')    
})

it ('should multiply all digits of a string number', () => {
    expect(multiplyDigitsInNumber('1234')).toEqual(24)
})

it ('should iterate over a string digit and return the maximun multiplication value of a substring of it', () => {    
    expect(getMaxMultiplicationValueOfSubstring(inputDigit, 4)).toEqual(5832)
    expect(getMaxMultiplicationValueOfSubstring(inputDigit, 13)).toEqual(23514624000)
})