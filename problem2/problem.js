// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

const MAX_FIBO_NUMBER = 4000000

function isEvenNumber (number) {
    return (number % 2) === 0
}

function nextFibonacci (tupple) {
    return tupple[0] + tupple[1]
}

function swapTupple (tupple, newVal) {
    return [tupple[1], newVal]
}

function problem_2_solution () {
    let currentFibo = 0
    let tupple = [1, 2]
    let acc = 0
    while (currentFibo < MAX_FIBO_NUMBER) {
        currentFibo = nextFibonacci(tupple)        
        if ((currentFibo < MAX_FIBO_NUMBER) && (isEvenNumber(currentFibo))) {
            acc += currentFibo
        }        
        tupple = swapTupple(tupple, currentFibo)
    }
    return acc + 2
}

const solution = problem_2_solution()
console.log(solution)

// TEST

const expect = require ('chai').expect

it ('must test is even number', () => {
    expect(isEvenNumber(2)).equal(true)
    expect(isEvenNumber(5)).equal(false)
})

it ('must test the swap function', () => {
    expect(swapTupple([1,2],3)).eql([2,3])
})